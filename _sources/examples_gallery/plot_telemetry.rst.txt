
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_gallery\plot_telemetry.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_plot_telemetry.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_plot_telemetry.py:

Overlaying speed traces of two laps
======================================

Compare two fastest laps by overlaying their speed traces.

.. GENERATED FROM PYTHON SOURCE LINES 6-23

.. code-block:: default



    import matplotlib.pyplot as plt
    import fastf1.plotting


    fastf1.Cache.enable_cache('../doc_cache')  # replace with your cache directory

    # enable some matplotlib patches for plotting timedelta values and load
    # FastF1's default color scheme
    fastf1.plotting.setup_mpl()

    # load a session and its telemetry data
    quali = fastf1.get_session(2021, 'Spanish Grand Prix', 'Q')
    laps = quali.load_laps(with_telemetry=True)









.. GENERATED FROM PYTHON SOURCE LINES 24-25

First, we select the two laps that we want to compare

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: default


    ver_lap = laps.pick_driver('VER').pick_fastest()
    ham_lap = laps.pick_driver('HAM').pick_fastest()








.. GENERATED FROM PYTHON SOURCE LINES 30-32

Next we get the telemetry data for each lap. We also add a 'Distance' column
to the telemetry dataframe as this makes it easier to compare the laps.

.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: default


    ver_tel = ver_lap.get_car_data().add_distance()
    ham_tel = ham_lap.get_car_data().add_distance()








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Finally, we create a plot and plot both speed traces.
We color the individual lines with the driver's team colors.

.. GENERATED FROM PYTHON SOURCE LINES 39-56

.. code-block:: default


    rbr_color = fastf1.plotting.team_color('RBR')
    mer_color = fastf1.plotting.team_color('MER')

    fig, ax = plt.subplots()
    ax.plot(ver_tel['Distance'], ver_tel['Speed'], color=rbr_color, label='VER')
    ax.plot(ham_tel['Distance'], ham_tel['Speed'], color=mer_color, label='HAM')

    ax.set_xlabel('Distance in m')
    ax.set_ylabel('Speed in km/h')

    ax.legend()
    plt.suptitle(f"Fastest Lap Comparison \n "
                 f"{quali.weekend.name} {quali.weekend.year} Qualifying")

    plt.show()




.. image-sg:: /examples_gallery/images/sphx_glr_plot_telemetry_001.png
   :alt: Fastest Lap Comparison   Spanish Grand Prix 2021 Qualifying
   :srcset: /examples_gallery/images/sphx_glr_plot_telemetry_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.384 seconds)


.. _sphx_glr_download_examples_gallery_plot_telemetry.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_telemetry.py <plot_telemetry.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_telemetry.ipynb <plot_telemetry.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
