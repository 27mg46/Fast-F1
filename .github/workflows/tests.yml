name: Run tests

# Controls when the action will run.
on:
  # run on push, manual dispatch and on a schedule
  # when run on schedule, tests will only be run if a new matplotlib release was found
  workflow_dispatch:
  push:
    branches-ignore:
      - gh-pages
  pull_request:


jobs:
  run-code-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    name: Tests on ${{ matrix.python-version }}
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ hashFiles('requirements/*/*.txt') }}
          restore-keys: |
            pip-cache

      - name: Install python requirements
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install -r requirements-dev.txt

      - name: Install Fast-F1 from sources
        run: |
          python3 -m pip install -e .

      - name: Create cache directory
        run: |
          mkdir test_cache  # make sure cache dir exists

      - name: Cache FastF1
        uses: actions/cache@v2
        with:
          path: ./test_cache
          key: fastf1-${{ secrets.CACHE_VERSION }}-${{ matrix.python-version }}-${{ hashFiles('*.*') }}
          restore-keys: |
            fastf1-${{ secrets.CACHE_VERSION }}-${{ matrix.python-version }}

      - name: Run tests
        run: |
          pytest -ra

  run-lint-checks:
    runs-on: ubuntu-latest
    name: Flake8 lint checks
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ hashFiles('requirements/*/*.txt') }}
          restore-keys: |
            pip-cache

      - name: Install python requirements
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements-dev.txt

      - name: Install Fast-F1 from sources
        run: |
          python3 -m pip install -e .

      - name: Run tests
        run: |
          mkdir test_cache  # make sure cache dir exists
          pytest -rf --flake8 --lint-only


  run-prj-and-doc-tests:
    name: Test doc and project structure
    runs-on: ubuntu-latest
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ hashFiles('requirements/*/*.txt') }}
          restore-keys: |
            pip-cache

      - name: Install python requirements
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install -r requirements-dev.txt

      - name: Create cache directory
        run: |
          mkdir doc_cache  # make sure cache dir exists

      - name: Cache FastF1
        uses: actions/cache@v2
        with:
          path: ./test_cache
          key: fastf1-${{ secrets.CACHE_VERSION }}-doc-cache-${{ hashFiles('*.*') }}
          restore-keys: |
            fastf1-${{ secrets.CACHE_VERSION }}-doc-cache

      - name: Install Fast-F1 from sources
        run: |
          python3 -m pip install -e .

      - name: Run tests
        run: |
          mkdir test_cache  # not really need but pytest setup relies on it 
          pytest -rf --prj-doc
          python setup.py build_sphinx
